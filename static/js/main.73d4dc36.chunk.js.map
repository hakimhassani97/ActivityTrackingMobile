{"version":3,"sources":["Components/Header.js","Pages/Home.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Header","AppBar","position","color","style","top","Toolbar","IconButton","edge","aria-label","Typography","variant","flexGrow","k","window","DeviceOrientationEvent","console","log","OrientationEvent","DeviceMotionEvent","lastInsert","Date","Home","props","startAccel","state","recording","setState","ondeviceorientation","addEventListener","handleOrientation","e","ondevicemotion","v","handleMotion","gyro","alpha","beta","gamma","date","toISOString","obj","db","ref","uid","push","key","set","accel","acceleration","Math","random","accelerationIncludingGravity","rotationRate","className","backgroundColor","Button","this","height","width","borderRadius","fontWeight","fontSize","size","startIcon","onClick","React","Component","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","database"],"mappings":"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","file":"static/js/main.73d4dc36.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import Fab from '@material-ui/core/Fab';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import AddIcon from '@material-ui/icons/Add';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function Header(){\r\n    return (\r\n        // <div style={{height:'10vh', alignItems:'center', flexDirection:'row', display:'flex', backgroundColor:'InfoBackground', justifyContent:'center', fontWeight:'bolder'}}>\r\n        //     Suivi des personnes agées\r\n        // </div>\r\n        <AppBar position=\"fixed\" color=\"primary\" style={{top: 0}}>\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\">\r\n                    Suivi des personnes agées\r\n                </Typography>\r\n                {/* <Fab color=\"secondary\" aria-label=\"add\" style={{position: 'absolute', zIndex: 1, top: -30, left: 0, right: 0, margin: '0 auto'}}>\r\n                    <AddIcon />\r\n                </Fab> */}\r\n                <div style={{flexGrow: 1}} />\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react';\r\nimport '../App.css';\r\nimport {db, uid} from '../index'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Pause from '@material-ui/icons/Pause';\r\n\r\nif (window.DeviceOrientationEvent) {\r\n    console.log(\"DeviceOrientation is supported\");\r\n} else if (window.OrientationEvent) {\r\n    console.log(\"MozOrientation is supported\");\r\n}\r\nif (window.DeviceMotionEvent) {\r\n    console.log(\"DeviceMotionEvent is supported\");\r\n}\r\n\r\nlet k\r\nlet lastInsert = new Date()\r\nlet frequency = 100\r\n// let data = []\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {recording: false}\r\n    }\r\n    startAccel = ()=>{\r\n        if(this.state.recording === false){\r\n            this.setState({recording: true}, ()=>{\r\n                window.ondeviceorientation = null\r\n                window.addEventListener('deviceorientation', this.handleOrientation)\r\n            })\r\n        }else{\r\n            this.setState({recording: false})\r\n        }\r\n    }\r\n    handleOrientation = (e)=>{\r\n        if(this.state.recording){\r\n            window.ondevicemotion = null\r\n            window.addEventListener('devicemotion', (v)=>this.handleMotion(v, {\r\n                gyro: {alpha:e.alpha, beta:e.beta, gamma:e.gamma},\r\n                date: new Date().toISOString()\r\n            }));\r\n        }\r\n    }\r\n    handleMotion = (e, obj)=>{\r\n        if(this.state.recording){\r\n            if(new Date() - lastInsert > frequency){\r\n                k = db.ref('users/'+uid+'/').push().key\r\n                db.ref('users/'+uid+'/'+k).set({\r\n                    accel: {acceleration: Math.random(), accelerationIncludingGravity: Math.random(), rotationRate: Math.random()},\r\n                    ...obj\r\n                });\r\n                lastInsert = new Date()\r\n            }\r\n        }\r\n    }\r\n    render (){\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\" style={{backgroundColor:'white'}}>\r\n                    {/* <button style={{ backgroundColor: this.state.recording ? 'red' : 'green', height: '20vh', width:'20vh', border:'0', borderRadius: '50%', fontWeight: 'bolder', fontSize:'30px', boxShadow: '0 0 solid black', color:'white' }}\r\n                        onClick={this.startAccel}>\r\n                        {this.state.recording ? 'Stop' : 'Start'}\r\n                    </button> */}\r\n                    <Button\r\n                        style={{ backgroundColor: this.state.recording ? 'red' : 'green', height: '20vh', width:'20vh', borderRadius: '50%', fontWeight: 'bolder', fontSize:'30px', color:'white' }}\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        startIcon={this.state.recording ? <Pause style={{ fontSize: 40 }} /> : <PlayArrow style={{ fontSize: 40 }} />}\r\n                        onClick={this.startAccel}\r\n                    >\r\n                        {this.state.recording ? 'Stop' : 'Start'}\r\n                    </Button>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport Header from './Components/Header';\nimport Home from './Pages/Home';\n\nfunction App() {\n  return (\n    <>\n      <Header></Header>\n      <Home></Home>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from \"firebase\";\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\nimport \"firebase/analytics\";\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n// TODO: Replace the following with your app's Firebase project configuration\n// For Firebase JavaScript SDK v7.20.0 and later, `measurementId` is an optional field\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBhWCedCUO7yVNDd-nhnAXatyq0V6GShic\",\n  authDomain: \"elderly-622a9.firebaseapp.com\",\n  databaseURL: \"https://elderly-622a9-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"elderly-622a9\",\n  storageBucket: \"elderly-622a9.appspot.com\",\n  messagingSenderId: \"792971798543\",\n  appId: \"1:792971798543:web:2c5ffefb25ca6926131b7a\",\n  measurementId: \"G-GXN13DRQ8W\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nexport const db = firebase.database()\nexport const uid = 'hakimhassani97'"],"sourceRoot":""}