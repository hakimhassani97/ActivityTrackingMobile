{"version":3,"sources":["Images/avatar.jpg","Constantes/Routes.js","Components/Header.js","Pages/Home.js","Helpers/Auth.js","Constantes/Theme.js","Pages/Profile.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Routes","base","base_url","home","profile","notifications","icons","Header","props","useState","drawer","setDrawer","LList","role","onClick","onKeyDown","List","to","style","textDecoration","color","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Fragment","SwipeableDrawer","anchor","open","onClose","onOpen","AppBar","position","top","Toolbar","IconButton","edge","aria-label","Typography","variant","TitleBehaviour","title","flexGrow","k","initAuth","db","uid","localStorage","getItem","ref","push","key","setItem","ThemeConfig","success","danger","window","DeviceOrientationEvent","console","log","OrientationEvent","DeviceMotionEvent","lastInsert","Date","Home","startAccel","state","recording","setState","ondeviceorientation","addEventListener","handleOrientation","e","ondevicemotion","v","handleMotion","gyro","alpha","beta","gamma","date","toISOString","obj","firebase","database","set","accel","acceleration","Math","random","accelerationIncludingGravity","rotationRate","className","backgroundColor","display","flexDirection","alignItems","justifyContent","this","fontSize","React","Component","Profile","componentDidMount","loadUser","once","then","snapshot","val","firstname","lastname","age","gender","weight","saveUser","marginTop","padding","Avatar","alt","src","require","default","marginBottom","height","width","TextField","onChange","target","value","id","label","FormControl","InputLabel","Select","labelId","MenuItem","Button","href","App","history","useHistory","setTitle","path","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ab9f86c9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.3a02f184.jpg\";","import {base_url} from '../../package.json'\r\n\r\nlet Routes = {\r\n    base: base_url,\r\n    home: base_url+'/Home',\r\n    profile: base_url+'/Profile',\r\n    notifications: base_url+'/Notifications'\r\n}\r\nexport default Routes","import React, { useState } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Divider, List, ListItem, ListItemIcon, SwipeableDrawer, Typography } from '@material-ui/core';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Link } from 'react-router-dom';\r\nimport Routes from '../Constantes/Routes';\r\nimport { TitleBehaviour } from '../App';\r\n\r\nconst icons = [<AccountCircleIcon />, <NotificationsIcon />, <HomeIcon />]\r\n\r\nexport default function Header(props) {\r\n    let [drawer, setDrawer] = useState(false)\r\n    const LList = () => (\r\n        <div\r\n            role=\"presentation\"\r\n            onClick={()=>setDrawer(false)}\r\n            onKeyDown={()=>setDrawer(false)}\r\n        >\r\n            <List>\r\n                <Link to={Routes.home} style={{textDecoration:'none', color:'gray'}}>\r\n                    <ListItem button key={'Home'}>\r\n                        <ListItemIcon>{icons[2]}</ListItemIcon>\r\n                        <ListItemText primary={'Home'} />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to={Routes.profile} style={{textDecoration:'none', color:'gray'}}>\r\n                    <ListItem button key={'Profile'}>\r\n                        <ListItemIcon>{icons[0]}</ListItemIcon>\r\n                        <ListItemText primary={'Profile'} />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to={Routes.notifications} style={{textDecoration:'none', color:'gray'}}>\r\n                    <ListItem button key={'Notifications'}>\r\n                        <ListItemIcon>{icons[1]}</ListItemIcon>\r\n                        <ListItemText primary={'Notifications'} />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n            <Divider />\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <React.Fragment key='left'>\r\n                <SwipeableDrawer\r\n                    anchor='left'\r\n                    open={drawer}\r\n                    onClose={() => setDrawer(false)}\r\n                    onOpen={() => setDrawer(true)}\r\n                >\r\n                    <LList></LList>\r\n                </SwipeableDrawer>\r\n            </React.Fragment>\r\n            <AppBar position=\"fixed\" color=\"primary\" style={{ top: 0 }}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={() => { setDrawer(true) }}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        {TitleBehaviour.title || 'Elderly'}\r\n                    </Typography>\r\n                    <div style={{ flexGrow: 1 }} />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport '../App.css';\r\nimport firebase from 'firebase'\r\nimport PlayArrow from '@material-ui/icons/PlayArrow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Pause from '@material-ui/icons/Pause';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { initAuth } from '../Helpers/Auth';\r\nimport ThemeConfig from '../Constantes/Theme'\r\n\r\nif (window.DeviceOrientationEvent) {\r\n    console.log(\"DeviceOrientation is supported\");\r\n} else if (window.OrientationEvent) {\r\n    console.log(\"MozOrientation is supported\");\r\n}\r\nif (window.DeviceMotionEvent) {\r\n    console.log(\"DeviceMotionEvent is supported\");\r\n}\r\n\r\nlet k\r\nlet lastInsert = new Date()\r\nlet frequency = 100\r\n// let data = []\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {recording: false, uid: initAuth(firebase.database())}\r\n    }\r\n    startAccel = ()=>{\r\n        if(this.state.recording === false){\r\n            this.setState({recording: true}, ()=>{\r\n                window.ondeviceorientation = null\r\n                window.addEventListener('deviceorientation', this.handleOrientation)\r\n            })\r\n        }else{\r\n            this.setState({recording: false})\r\n        }\r\n    }\r\n    handleOrientation = (e)=>{\r\n        if(this.state.recording){\r\n            window.ondevicemotion = null\r\n            window.addEventListener('devicemotion', (v)=>this.handleMotion(v, {\r\n                gyro: {alpha:e.alpha, beta:e.beta, gamma:e.gamma},\r\n                date: new Date().toISOString()\r\n            }));\r\n        }\r\n    }\r\n    handleMotion = (e, obj)=>{\r\n        if(this.state.recording){\r\n            if(new Date() - lastInsert > frequency){\r\n                k = firebase.database().ref('users/'+this.state.uid+'/').push().key\r\n                firebase.database().ref('users/'+this.state.uid+'/data/'+k).set({\r\n                    accel: {acceleration: Math.random(), accelerationIncludingGravity: Math.random(), rotationRate: Math.random()},\r\n                    ...obj\r\n                });\r\n                lastInsert = new Date()\r\n            }\r\n        }\r\n    }\r\n    render (){\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\" style={{backgroundColor:'white'}}>\r\n                    {/* <Button\r\n                        style={{ backgroundColor: this.state.recording ? ThemeConfig.danger : ThemeConfig.success, height: '20vh', width:'20vh', borderRadius: '50%', fontWeight: 'bolder', fontSize:'30px', color:'white' }}\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        startIcon={this.state.recording ? <Pause style={{ fontSize: 40 }} /> : <PlayArrow style={{ fontSize: 40 }} />}\r\n                        onClick={this.startAccel}\r\n                    >\r\n                        {this.state.recording ? 'Stop' : 'Start'}\r\n                    </Button> */}\r\n                    <div style={{display:'flex', flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                        <IconButton\r\n                            onClick={this.startAccel}\r\n                            style={{backgroundColor: this.state.recording ? ThemeConfig.danger : ThemeConfig.success, color:'white'}}>\r\n                            {this.state.recording ? <Pause style={{ fontSize: 40 }} /> : <PlayArrow style={{ fontSize: 40 }} />}\r\n                        </IconButton>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","\r\nconst initAuth = (db)=>{\r\n    let uid = localStorage.getItem('uid')\r\n    if(!uid){\r\n        let uid = db.ref('users/').push().key\r\n        localStorage.setItem('uid', uid)\r\n    }\r\n    return uid\r\n}\r\n\r\nexport {initAuth}","const ThemeConfig = {\r\n    success: 'green',\r\n    danger: 'red'\r\n}\r\nexport default ThemeConfig","import React from 'react';\r\nimport { Avatar, Button, FormControl, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport firebase from 'firebase'\r\nimport { initAuth } from '../Helpers/Auth';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {uid: initAuth(firebase.database()), firstname:'', lastname:'', age:'', gender:'Male', weight:''}\r\n    }\r\n    componentDidMount = ()=>{\r\n        this.loadUser()\r\n    }\r\n    loadUser = ()=>{\r\n        return firebase.database().ref('users/'+this.state.uid+'/profile').once('value').then((snapshot) => {\r\n            var {firstname, lastname, age, gender, weight} = (snapshot.val() && snapshot.val()) || {firstname:'', lastname:'', age:'', gender:'', weight:''};\r\n            this.setState({firstname, lastname, age, gender, weight})\r\n        })\r\n    }\r\n    saveUser = ()=>{\r\n        firebase.database().ref('users/'+this.state.uid+'/profile').set({\r\n            firstname:this.state.firstname, lastname:this.state.lastname, age:this.state.age, gender:this.state.gender, weight:this.state.weight\r\n        })\r\n    }\r\n    render (){\r\n        return (\r\n            <div style={{marginTop:'60px', display:'flex', flexDirection:'column', alignItems:'center', justifyContent:'center', padding:'4% 0'}}>\r\n                <Avatar alt=\"Remy Sharp\" src={require('../Images/avatar.jpg').default} style={{marginBottom:'1rem', height:'100px', width:'100px'}}></Avatar>\r\n                <TextField onChange={(e)=>{this.setState({firstname:e.target.value})}} id=\"firstname\" value={this.state.firstname} label=\"First name\" variant=\"outlined\" style={{marginBottom:'1rem', width:'70%'}} />\r\n                <TextField onChange={(e)=>{this.setState({lastname:e.target.value})}} id=\"lastname\" value={this.state.lastname} label=\"Last name\" variant=\"outlined\" style={{marginBottom:'1rem', width:'70%'}} />\r\n                <TextField onChange={(e)=>{this.setState({age:e.target.value})}} id=\"age\" value={this.state.age} label=\"Age\" variant=\"outlined\" style={{marginBottom:'1rem', width:'70%'}} />\r\n                <FormControl variant=\"outlined\" style={{marginBottom:'1rem', width:'70%'}}>\r\n                    <InputLabel id=\"genderLabel\">Gender</InputLabel>\r\n                    <Select\r\n                        labelId=\"genderLabel\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        value={this.state.gender}\r\n                        onChange={(e)=>{this.setState({gender:e.target.value})}}\r\n                        >\r\n                        <MenuItem value='Male'>Male</MenuItem>\r\n                        <MenuItem value='Female'>Female</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField onChange={(e)=>{this.setState({weight:e.target.value})}} id=\"weight\" value={this.state.weight} label=\"Weight\" variant=\"outlined\" style={{marginBottom:'1rem', width:'70%'}} />\r\n                <Button onClick={()=>{this.saveUser()}} variant=\"contained\" href=\"#outlined-buttons\" color=\"primary\" style={{marginBottom:'1rem', width:'70%'}}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\nimport { Route, BrowserRouter as Router, Switch, useHistory } from 'react-router-dom';\nimport Header from './Components/Header';\nimport Routes from './Constantes/Routes';\nimport Home from './Pages/Home';\nimport Profile from './Pages/Profile';\n\nlet TitleBehaviour = {}\n\nfunction App() {\n  var history = useHistory()\n  let [title, setTitle] = useState(null)\n  TitleBehaviour.title = title\n  TitleBehaviour.setTitle = setTitle\n  return (\n    <>\n      <Router history={history}>\n        <Header></Header>\n        <Switch>\n          <Route path={[Routes.base, Routes.home]} exact>\n            {()=>{\n              setTitle()\n              return <Home></Home>\n            }}\n          </Route>\n          <Route path={Routes.profile}>\n            {()=>{\n              setTitle('Profile')\n              return <Profile></Profile>\n            }}\n          </Route>\n          <Route path={Routes.notifications}></Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport {TitleBehaviour}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from \"firebase\";\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\nimport \"firebase/analytics\";\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n// TODO: Replace the following with your app's Firebase project configuration\n// For Firebase JavaScript SDK v7.20.0 and later, `measurementId` is an optional field\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBhWCedCUO7yVNDd-nhnAXatyq0V6GShic\",\n  authDomain: \"elderly-622a9.firebaseapp.com\",\n  databaseURL: \"https://elderly-622a9-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"elderly-622a9\",\n  storageBucket: \"elderly-622a9.appspot.com\",\n  messagingSenderId: \"792971798543\",\n  appId: \"1:792971798543:web:2c5ffefb25ca6926131b7a\",\n  measurementId: \"G-GXN13DRQ8W\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// export const db = firebase.database()"],"sourceRoot":""}